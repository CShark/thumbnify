<Window x:Class="tebisCloud.ProcessingEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:tebisCloud"
        xmlns:nodify="https://miroiu.github.io/nodify"
        xmlns:postprocessing="clr-namespace:tebisCloud.Postprocessing"
        xmlns:processing="clr-namespace:tebisCloud.Data.Processing"
        xmlns:wpf="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
        xmlns:converter="clr-namespace:tebisCloud.Converter"
        xmlns:parameters="clr-namespace:tebisCloud.Data.Processing.Parameters"
        xmlns:controls="clr-namespace:tebisCloud.Controls"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        WindowStartupLocation="CenterOwner"
        WindowState="Maximized"
        Style="{StaticResource Dark}"
        Title="Verarbeitung" Height="450" Width="800">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:ProcessingEditor.CreateNode}" Executed="CreateNode_OnExecuted"></CommandBinding>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="{Binding AddNode}" Key="A" Modifiers="Shift" />
        <KeyBinding Command="{Binding DeleteNode}" Key="X" />
    </Window.InputBindings>
    <Window.Resources>
        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Viewport="0 0 20 20"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Opacity="0.5"
                      Viewport="0 0 100 100"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource LargeGridGeometry}" />

        <Style TargetType="MenuItem">
            <Setter Property="CommandTarget"
                    Value="{Binding Path=PlacementTarget,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
            </Setter>
        </Style>

        <converter:BoolInvert x:Key="BoolInvert" />

        <BooleanToVisibilityConverter x:Key="BoolToVis"></BooleanToVisibilityConverter>

        <converter:ParameterTypeToColor x:Key="ParamTypeToColor">
            <converter:ParameterColor Type="{x:Type parameters:FilePath}" Color="LightPink" />
            <converter:ParameterColor Type="{x:Type parameters:AudioStream}" Color="LightPink" />
        </converter:ParameterTypeToColor>

        <converter:ParameterTypeToConnector x:Key="ParamTypeToConnector">
            <converter:ParameterConnector Type="{x:Type parameters:AudioStream}">
                <ControlTemplate TargetType="Control">
                    <Border Background="{TemplateBinding Background}" Width="10" Height="10" CornerRadius="10" />
                </ControlTemplate>
            </converter:ParameterConnector>
            <converter:ParameterConnector Type="{x:Type parameters:FilePath}">
                <ControlTemplate TargetType="Control">
                    <Rectangle Fill="{TemplateBinding Background}" Width="10" Height="10">
                        <Rectangle.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX=".8" ScaleY=".8"></ScaleTransform>
                                <RotateTransform Angle="45"></RotateTransform>
                            </TransformGroup>
                        </Rectangle.LayoutTransform>
                    </Rectangle>
                </ControlTemplate>
            </converter:ParameterConnector>
        </converter:ParameterTypeToConnector>

        <converter:ParameterTypeToControls x:Key="ParamTypeToEditor">
            <converter:ParameterControls Type="{x:Type parameters:FilePath}">
                <DataTemplate DataType="{x:Type parameters:FilePath}">
                    <controls:FilePathControl FilePath="{Binding}" />
                </DataTemplate>
            </converter:ParameterControls>
        </converter:ParameterTypeToControls>

        <LinearGradientBrush x:Key="FadeOpacityMask"
                             StartPoint="0 0"
                             EndPoint="1 0">
            <GradientStop Color="#22FFFFFF"
                          Offset="0" />
            <GradientStop Color="#88FFFFFF"
                          Offset="0.3" />
            <GradientStop Color="#88FFFFFF"
                          Offset="0.7" />
            <GradientStop Color="#22FFFFFF"
                          Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="nodify:NodeInput">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type nodify:NodeInput}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Visibility="Collapsed"
                                    x:Name="Highlight"
                                    OpacityMask="{StaticResource FadeOpacityMask}"
                                    Background="{TemplateBinding BorderBrush}" />

                            <StackPanel Orientation="{TemplateBinding Orientation}"
                                        Margin="{TemplateBinding Padding}">

                                <Control x:Name="PART_Connector"
                                         Focusable="False"
                                         Margin="-10 0 5 0"
                                         VerticalAlignment="Center"
                                         Background="Transparent"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Template="{TemplateBinding ConnectorTemplate}" />

                                <ContentPresenter ContentSource="Header" />
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation"
                                     Value="Vertical">
                                <Setter TargetName="PART_Connector"
                                        Property="Margin"
                                        Value="0 -10 0 5" />
                            </Trigger>

                            <Trigger Property="IsConnected"
                                     Value="True">
                                <Setter TargetName="PART_Connector"
                                        Property="Background"
                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <Trigger Property="nodify:PendingConnection.IsOverElement"
                                     Value="True">
                                <Setter TargetName="PART_Connector"
                                        Property="Background"
                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Highlight"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                            <Trigger Property="nodify:PendingConnection.IsOverElement"
                                     Value="True">
                                <Setter TargetName="Highlight"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="nodify:NodeOutput">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type nodify:NodeOutput}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Visibility="Collapsed"
                                    x:Name="Highlight"
                                    OpacityMask="{StaticResource FadeOpacityMask}"
                                    Background="{TemplateBinding BorderBrush}" />

                            <StackPanel Orientation="{TemplateBinding Orientation}"
                                        HorizontalAlignment="Right"
                                        Margin="{TemplateBinding Padding}">

                                <ContentPresenter ContentSource="Header" />

                                <Control x:Name="PART_Connector"
                                         Focusable="False"
                                         Margin="5 0 -10 0"
                                         VerticalAlignment="Center"
                                         Background="Transparent"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Template="{TemplateBinding ConnectorTemplate}" />
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation"
                                     Value="Vertical">
                                <Setter TargetName="PART_Connector"
                                        Property="Margin"
                                        Value="0 5 0 -10" />
                            </Trigger>

                            <Trigger Property="IsConnected"
                                     Value="True">
                                <Setter TargetName="PART_Connector"
                                        Property="Background"
                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <Trigger Property="nodify:PendingConnection.IsOverElement"
                                     Value="True">
                                <Setter TargetName="PART_Connector"
                                        Property="Background"
                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Highlight"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                            <Trigger Property="nodify:PendingConnection.IsOverElement"
                                     Value="True">
                                <Setter TargetName="Highlight"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="nodify:Node">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type nodify:Node}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!--Header-->
                                <Border
                                    Visibility="{TemplateBinding HasHeader, Converter={StaticResource BoolToVis}}"
                                    Background="{TemplateBinding HeaderBrush}"
                                    CornerRadius="3 3 0 0"
                                    Grid.ColumnSpan="3">
                                    <ContentPresenter ContentSource="Header" />
                                </Border>

                                <!--Body-->
                                <StackPanel Grid.Row="1">
                                    <!--Data OUT-->
                                    <ItemsControl ItemsSource="{TemplateBinding Output}"
                                                  ItemTemplate="{TemplateBinding OutputConnectorTemplate}"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                  HorizontalContentAlignment="Right"
                                                  Grid.Row="2"
                                                  Focusable="False" />

                                    <!--Content-->
                                    <Border Grid.Row="1"
                                            Padding="16 0 16 0"
                                            Background="{TemplateBinding ContentBrush}">
                                        <ContentPresenter
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                    </Border>

                                    <!--Data IN-->
                                    <ItemsControl ItemsSource="{TemplateBinding Input}"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                  ItemTemplate="{TemplateBinding InputConnectorTemplate}"
                                                  Focusable="False" />
                                </StackPanel>

                                <!--Footer-->
                                <Border
                                    Visibility="{TemplateBinding HasFooter, Converter={StaticResource BoolToVis}}"
                                    Background="{TemplateBinding FooterBrush}"
                                    CornerRadius="0 0 3 3"
                                    Grid.Row="2"
                                    Grid.ColumnSpan="3"
                                    Padding="6 4 6 4">
                                    <ContentPresenter ContentSource="Footer" />
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="_Video" InputGestureText="V">
                <MenuItem.Icon>
                    <wpf:MaterialIcon Kind="MovieOpen" />
                </MenuItem.Icon>
                <MenuItem Header="Speichern" Command="{x:Static local:ProcessingEditor.CreateNode}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="ContentSave" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Youtube" Command="{x:Static local:ProcessingEditor.CreateNode}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="CloudUpload" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Audio" InputGestureText="A">
                <MenuItem.Icon>
                    <wpf:MaterialIcon Kind="Music" />
                </MenuItem.Icon>
                <MenuItem Header="Laden" Command="{x:Static local:ProcessingEditor.CreateNode}"
                          CommandParameter="{x:Type processing:AudioLoadFile}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="FolderOpen" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Speichern" Command="{x:Static local:ProcessingEditor.CreateNode}"
                          CommandParameter="{x:Type processing:AudioSaveFile}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="ContentSave" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Merge" Command="{x:Static local:ProcessingEditor.CreateNode}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="CallMerge" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Normalisieren" Command="{x:Static local:ProcessingEditor.CreateNode}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="Waveform"></wpf:MaterialIcon>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Upload FTP" Command="{x:Static local:ProcessingEditor.CreateNode}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="FolderUpload" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Upload WebDAV" Command="{x:Static local:ProcessingEditor.CreateNode}">
                    <MenuItem.Icon>
                        <wpf:MaterialIcon Kind="CloudUpload" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <Separator></Separator>
            <MenuItem Header="Löschen" InputGestureText="X" Command="{Binding DeleteNode}" />
        </ContextMenu>
    </Window.ContextMenu>

    <Grid Background="{StaticResource NodifyEditor.BackgroundBrush}">
        <Grid Background="{StaticResource LargeGridLinesDrawingBrush}"></Grid>
        <nodify:NodifyEditor x:Name="Editor" Connections="{Binding Connections}"
                             Background="{StaticResource SmallGridLinesDrawingBrush}"
                             DisconnectConnectorCommand="{Binding DisconnectCommand}"
                             PendingConnection="{Binding PendingConnection}" ItemsSource="{Binding Nodes}">
            <nodify:NodifyEditor.Resources>
                <Style TargetType="nodify:ItemContainer">
                    <Setter Property="BorderBrush" Value="DimGray" />

                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="IsPreviewingSelection"
                                           Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush"
                                        Value="{Binding SelectedBrush, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="Margin"
                                        Value="{Binding SelectedMargin, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="BorderThickness"
                                        Value="{Binding SelectedBorderThickness, RelativeSource={RelativeSource Self}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsPreviewingSelection"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{Binding SelectedBrush, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Margin"
                                    Value="{Binding SelectedMargin, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderThickness"
                                    Value="{Binding SelectedBorderThickness, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="nodify:PendingConnection.IsOverElement"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{Binding HighlightBrush, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Margin"
                                    Value="{Binding SelectedMargin, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderThickness"
                                    Value="{Binding SelectedBorderThickness, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </nodify:NodifyEditor.Resources>
            <nodify:NodifyEditor.ItemTemplate>
                <DataTemplate DataType="{x:Type postprocessing:EditorNode}">
                    <nodify:Node Input="{Binding Inputs}"
                                 Output="{Binding Outputs}" Width="200">
                        <nodify:Node.Header>
                            <StackPanel Margin="0,4,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Title}" Margin="6,0,0,0" />

                                    <ContentPresenter Content="{Binding SourceNode.NodeStatus}" Grid.Column="1">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate DataType="{x:Type processing:ENodeStatus}">
                                                <wpf:MaterialIcon x:Name="Icon" Visibility="Collapsed" Height="16">
                                                    <wpf:MaterialIcon.Effect>
                                                        <DropShadowEffect ShadowDepth="0" BlurRadius="10" Opacity=".7" Color="DimGray"></DropShadowEffect>
                                                    </wpf:MaterialIcon.Effect>
                                                </wpf:MaterialIcon>

                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding}"
                                                                 Value="{x:Static processing:ENodeStatus.Running}">
                                                        <Setter TargetName="Icon" Property="Visibility"
                                                                Value="Visible" />
                                                        <Setter TargetName="Icon" Property="Kind"
                                                                Value="ClockTimeFour" />
                                                        <Setter TargetName="Icon" Property="Foreground"
                                                                Value="DarkGray" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}"
                                                                 Value="{x:Static processing:ENodeStatus.Completed}">
                                                        <Setter TargetName="Icon" Property="Visibility"
                                                                Value="Visible" />
                                                        <Setter TargetName="Icon" Property="Kind"
                                                                Value="CheckCircle" />
                                                        <Setter TargetName="Icon" Property="Foreground"
                                                                Value="GreenYellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}"
                                                                 Value="{x:Static processing:ENodeStatus.Error}">
                                                        <Setter TargetName="Icon" Property="Visibility"
                                                                Value="Visible" />
                                                        <Setter TargetName="Icon" Property="Kind"
                                                                Value="CloseOctagon" />
                                                        <Setter TargetName="Icon" Property="Foreground"
                                                                Value="Orange" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </Grid>
                                <Border Background="{StaticResource ControlBackground}" Margin="0,3,0,0">
                                    <ProgressBar Foreground="LightGreen" BorderThickness="0" Height="5"
                                                 Margin="0,3,0,0" Maximum="1"
                                                 Value="{Binding SourceNode.Progress, Mode=OneWay}"
                                                 Background="Transparent" />
                                </Border>
                            </StackPanel>
                        </nodify:Node.Header>
                        <nodify:Node.HeaderBrush>
                            <SolidColorBrush Color="{Binding NodeColor}" />
                        </nodify:Node.HeaderBrush>
                        <nodify:Node.InputConnectorTemplate>
                            <DataTemplate DataType="{x:Type postprocessing:Connector}">
                                <StackPanel>
                                    <nodify:NodeInput Header="{Binding Name}" IsConnected="true"
                                                      ConnectorTemplate="{Binding Type, Converter={StaticResource ParamTypeToConnector}}"
                                                      Anchor="{Binding Anchor,Mode=OneWayToSource}">
                                        <nodify:NodeInput.BorderBrush>
                                            <SolidColorBrush
                                                Color="{Binding Type, Converter={StaticResource ParamTypeToColor}}" />
                                        </nodify:NodeInput.BorderBrush>
                                    </nodify:NodeInput>
                                    <ContentPresenter Margin="10,0,10,10"
                                                      IsEnabled="{Binding IsConnected, Converter={StaticResource BoolInvert}}"
                                                      Content="{Binding Parameter.DefaultValueObj}"
                                                      ContentTemplateSelector="{StaticResource ParamTypeToEditor}" />
                                </StackPanel>
                            </DataTemplate>
                        </nodify:Node.InputConnectorTemplate>
                        <nodify:Node.OutputConnectorTemplate>
                            <DataTemplate DataType="{x:Type postprocessing:Connector}">
                                <nodify:NodeOutput Header="{Binding Name}"
                                                   IsConnected="true"
                                                   ConnectorTemplate="{Binding Type, Converter={StaticResource ParamTypeToConnector}}"
                                                   Anchor="{Binding Anchor,Mode=OneWayToSource}">
                                    <nodify:NodeOutput.BorderBrush>
                                        <SolidColorBrush
                                            Color="{Binding Type, Converter={StaticResource ParamTypeToColor}}" />
                                    </nodify:NodeOutput.BorderBrush>
                                </nodify:NodeOutput>
                            </DataTemplate>
                        </nodify:Node.OutputConnectorTemplate>
                    </nodify:Node>

                </DataTemplate>
            </nodify:NodifyEditor.ItemTemplate>
            <nodify:NodifyEditor.ItemContainerStyle>
                <Style TargetType="nodify:ItemContainer">
                    <Setter Property="Location" Value="{Binding SourceNode.NodeLocation}" />
                </Style>
            </nodify:NodifyEditor.ItemContainerStyle>
            <nodify:NodifyEditor.ConnectionTemplate>
                <DataTemplate DataType="{x:Type postprocessing:Connection}">
                    <nodify:Connection Source="{Binding Source.Anchor}" Target="{Binding Target.Anchor}"
                                       SourceOffset="5,0" TargetOffset="5,0"
                                       StrokeThickness="1" Spacing="0">
                        <nodify:Connection.Stroke>
                            <SolidColorBrush Color="{Binding Type, Converter={StaticResource ParamTypeToColor}}" />
                        </nodify:Connection.Stroke>
                        <nodify:Connection.Fill>
                            <SolidColorBrush Color="{Binding Type, Converter={StaticResource ParamTypeToColor}}" />
                        </nodify:Connection.Fill>
                    </nodify:Connection>
                </DataTemplate>
            </nodify:NodifyEditor.ConnectionTemplate>
            <nodify:NodifyEditor.PendingConnectionTemplate>
                <DataTemplate DataType="{x:Type postprocessing:PendingConnection}">
                    <nodify:PendingConnection StartedCommand="{Binding StartCommand}"
                                              CompletedCommand="{Binding FinishCommand}" AllowOnlyConnectors="true"
                                              StrokeThickness="1">
                    </nodify:PendingConnection>
                </DataTemplate>
            </nodify:NodifyEditor.PendingConnectionTemplate>
        </nodify:NodifyEditor>

        <Button Margin="50" HorizontalAlignment="Left" VerticalAlignment="Top" Click="Test_OnClick">Test</Button>
    </Grid>
</Window>